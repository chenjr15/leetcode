class Solution {
    public boolean canWinNim(int n) {
        // 动态规划
        // 设dp[n] 是有n个石子且先手的时候是否能赢的
        // 则 dp[1]、dp[2]、dp[3] 都是true ，因为可以通过一次全部拿掉获胜
        // 而dp[4] 无论最多只能拿掉3个，最少拿1个，则剩下的石子范围是1-3个刚好可以让对手赢，因此dp[4]=false
        // 同理 dp[5]剩下的石子范围是2-4，如果剩下4个，则对方无法获胜，因此该情况可以赢 dp[5] = true
        // 可以得到递推式dp[n] = !dp[n-1] || !dp[n-2] || !dp[n-3] = !(dp[n-1] && dp[n-2] && dp[n-3]) 
        // 即如果n-1、n-2、n-3 任意一种情况能让对方输的话，则n个石子能赢
        // 然后遍历dp的值可以发现其实有规律的，按三个T，一个F，规律重复，即只要n不是4的倍数就能赢
        return n%4 != 0;
    }
}
